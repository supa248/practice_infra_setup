version: 2.1

orbs:
  # Choose either one of the orbs below
  # Declare a dependency on the welcome-orb
  # welcome: circleci/welcome-orb@0.4.1
  aws-cli: circleci/aws-cli@2.0.3

commands:

  print_pipeline_id:
    parameters:
      id: 
        type: string
    steps:
      - run: echo << parameters.id >>

  destroy_environment:
    steps:
      - run:
          name: Destroy environment
          # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable 
          # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID 
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5}

jobs:
  create_infrastructure:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: amazon/aws-cli
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: Create Clouforrmation Stack
          command: |
            aws cloudformation deploy \
            --template-file template \
            --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
            --region us-east-1
      

  # configure_infrastructure:
  #   docker:
  #     - image: python:3.7-alpine3.11

  #   steps:
  #     - checkout
  #     - add_ssh_keys:
  #         fingerprints: [68:d8:6c:e6:87:19:51:18:9f:2d:97:90:69:7b:40:29]
  #     - run:
  #         name: Install Ansible
  #         command: |
  #           apk add --update ansible

  #     - run:
  #         name: Run Playbook and Configure server
  #         command: |
  #           ansible-playbook -i inventory.txt main-remote.yaml




  smoke_test:
    docker:
      - image: alpine:latest
    steps:
      - run:
          name: smoke test
          command: return 1
      - destroy_environment      

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  my_workflow:
    jobs:
      - create_infrastructure
    #  - configure_infrastructure
      - smoke_test
     
